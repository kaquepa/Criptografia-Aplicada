import numpy as np
import numpy as np
import string
import unicodedata
import operator as operator



import re
import string
import math
import itertools
from collections import defaultdict, Counter
from operator import itemgetter
ciphertext = "pidvncqgufmnikyezsdfcicpaekphafrpimxxkcftgaqhpmvrxczgcewzlgloxupglyckapewwlkqpexuiawycsmmlxvjdwgtajgswhwglmdpkjmclamdvgurpyeejthnhwcnabtsxrfmrmlpuxevyrtyhlxikysyqhgpicldqfggkcgkaqgjwncgyctqksjjwyvutpedzvmezjtvrrprebegwbjcpalqdwuvwqahqpkqzurodypkmvqstdehswzoyiekbvrremnfejsxjqstdehswzoyietpkjmclacktgbvwnaujxfqromrdysgnjoygmtdhxiwkgdkegmvilueufmnvnctudwsbrntapeigmrcqumqavnzckaeuhkjykqtahxsnicydahtabzozazkbgdktmduqtdntqltakpzrjvmruqsgncgdazjtvdddmfudvawuqouquasnicqumqdxrdfcaxwjecvonovqcwwywkazybsuhwcruqbsrjqsvuhpkblcqmqdiaaruclqicsxgcpahqbvnignefygzntvmreufmnigqcadisaloyhuiigazcaozjpsclccnmepkmfumufhdkvrucuzqdlnejmnqdwmvrjgsfegajxgkimeawjfbgnteugrvpraagjwncgrehupamvkydqlxssrtnexqpxazeypmhpwwtqltdqgsblcfiejdjrrgjeqcqsatqsnqiisjmgltghpslfonazxpvxggjoeitmbroggaiosvscyzqrgsnrnrakqdzrgqnofqbgmvegduhpeorbcreupwbktydmddhafrpiatxsyrtridqbvncwynpqtswucpayjdvxffgamjtkjztcmpqgwbvttamepfxzvccqhuaivtymgcphjluynmcpfqrfmduqhwplkltqvdjjdcaodtpvxjrmrgcqsalnfoqdhmaugaepeggbktcsmcxyxjcahmhpezlgysekpklrdccmixsvvznlatxjzlcldattjnggltqlxjjdwkazybsuroyrqbduxdwkpqirglfglodctwvrpahmirsbkclhmirgvfpysgqhserpynmewsezckuujpnjikcdmttvnrpgmmyhwuvulaaiptrromqgutjjvureqiijjejmazybsufcjtmopidvpyoqhpedzvmcahpbxjqouqhxsmrtkeuqkgukcnodgjwcvogaqiiwjekkaxsdeyvuaooeagwxqmhqsigahwceejpnjtqkvadismvfcpmhiaarctezjjjjwqgaaucuxevpopuhlnrpgmmbdrjddysqwjajffcpqhignlonogsdejzujozwtwbkctaaqaljpcmlmujkxljccfegwnjvcseqdgbdgssmcxyxjbymnqtsukcwaabpvrjucabufmnecxenhpgurussekgjxlqfibeegcromoxqtmlyckoyutguzcypduhwwkqssqepfrdcjqguiayffcazybsuvuruzqdwblojemecwvloyzqrgsnugaedjtrjhwcnmetkddjgpafdljdqcfmsxdnlumugcpyricdazqdenukeaygjwefecszkcujkklhmckabkqsmmwxjjwccxobpexlgjazqdfjeqqsmipnjeclaaxpyricdaetxkbvqfeojdjngglabegidvemmaddkbfnmnseewbtqaobeswvfutedjjvxfssebqhkjrpmseqkgukckeecdlduqnedwjfcfwmzmcqsbzokeecdlduqpeefdfmvwyeabxslfokuujdgaxwjhaitnnjocsyeimmfrmdqicgbukxedefmnwgxacktdnscpuxxdljfcjtagjwxlxgmaiwsyfwaoeybuxdecrfuosnfdyrgbwgmvwkcacqgrfqouqujelfozoueewaxwltakdsukcwaokgaxjqsmoebtxzqcuyqbszlklacktswuckuujdjjgkboqgjwefunopuawertytqqdxrdfmmgdsgjwkpmakpwxckyeoebgnhwcfmptexjryrmephjejyrbugydevmuaxtucftcabucsbegaeeipjrfuylfqgdjgcpapuclafryrmuclartcdqfdabjcjtmhesaruyiduegmvukoejgsaeqqooqbawyqouqttnndqqsqwjaajgdalvpnxircrskclxlqxayrplxuqynucpvxtqkcqhiwirgnrqsxkxztcmpygwlrqyonqdtjdcqcgyssmfemmaiwgvvpqeejptndosifedtaziydahtkyfpbedqbgbktcsmcxyxjfcpayhwuvuyfmiisaroqepqtguzcqeskxfmfqaayyczxzpbioqsgyftcsfqfmjefmctuvsaroyonqdtjwkaadqbedzvmiyfgwbjkmnmtdkyvnmtmcpfqffyqguasvrssizqtejcqsvuhpexscpuxxdkdskpayfpjjugltdesglfozouedkcigqayyvgbvurahqbwwtcltmtdklfoyqguasvrssizqtfpicaapqdsukcwamjtwbsqaogkbkxitgsauawbgcqsmhpeyvnynmcxtrrqldqucuxevpadqbmvikloouggwkgqeyswaoigclqswsvrxysqzxekfqhiyrduxevmucktmvxtspattzxdglsajxfqrtypfqsgncjctudwslftrapedknlefirhtwuvhclupbwwkgcsoqegddcqoeitmbgcgszqduxeucggygsvvuaabqguxdgjeaxtucftmzmcqsnfcjtmopxrtcpaycjacfvpiejtkzlcldaejnrickatyhlxikydazxekfgnedwjfcrtymxxtuxdqcrmctkbvufoyuckngqpqgugsirqcrmcisxdcssqbtklfptipqgsvflmvqcgawfecradiwjawltmhhwjvncsbqgslfprizkpjndcyvqdimarfcpayhvjeckinypxrqgpaykbsnjeylmdpsoikaapehmuugqcqhpemfemmnexgyrtyeejxujigkaeftjwruynpqgsvrvcezsdfcicpuywgmyfemmykxlxjcliyqxknwqpayvpdjiemmqbtknjvcsmdxejzucrmcigmfucxubpvxjqqqgqijxroggaiswlzfgrmcesbjcpazexlntqkexuhwxlxgrmihmjjjgsfegajjwkaecpabzpreduhkjevcspefmnfwrrmicwbjgergfdzjmkyuywdjrccouqjxfqrgqcmfpvxuqhadtxeifqjosyrgnhwctudwsmvkvapeigmrcqumvperckypmhplarumqgutmvacpducogxcqeioeewaxwltakdsukcwagcysaukkzaeagpzemegcamprtmnpudkqfocneddkovefayfpjjhwcogjggbyqkezicgbmglhmckwadcqieidwqftpihuawgtnymakdzrgqnofqbgyftouqvprndkqtadpgbvqsvukcwwywkaduhhxjvypahfmneklggubkjskyadqosxugnouiswxlxgrykxljjjgsfegajjfgfqhtfcvumhqsigavqqsqkhsvzimspuhujeuyrmccsvrpfaeuvmrevcaztpjjdosifetsxwkkdqqayddvcmbetdnjvgvqhpebvfcmmirgvfpyooeczntkymafpabggpggdisaroyuywgmyffcahuhlalbcsckpdnicmcmcxfqfoyiesjjcfryrmucuxevpadubmvrpysouclnugyggqtkcrudodqbfjdgqmmtxjntcmqgutdnjgrihugsvricnfyawirfcoewjajicnoesxflfogngjdkmveymudwsmrgjeevxfjcocnfurznxcpayqddxtcjozttzjmkyaskpgbhwytdeperxqqbqrtjjdgjahqgsvjgoumdsgbldgtmctfcvqsvuhpeddccxbbdkjfcqahuhlalbcsoeaglrtymuctvrrvymqdiwjjeybqspkwrvcrdqtfzlcltaehgdktmsmdxejzuytqhggazbydairgaigpayebsrjfcpduhkjgqqsultdwfgltmdigxakkbadpgbvocxuqksvfuhiyrdvrqkymaihwdjckisehdnmcltmjtvngtcseqbsbaccrmjpjmvfcmmyhgszozofyczjgcptutdhjicqeyfgwxjjmmqdhwbkcmaoxtyjiqqhactfbvuraaqrznxcpgdyisaroropehgbrpgmmyhvdicltqqumprqfeojdjeztmumsptntclapygwlrqboejxjxjgtiguhknjjmmqdhvnhwcaqeaajcjcsfyczjwcjapetdnjryrqsxsvxtynpuhsevuqeyftfjjpcmnyrgvruaoyftdxjpycmrtujjwzidqbhjicbezjggmvwkayqfmrecouqvamclctazqpydrgcsoqesaronodfdmlfcmstebwwjssaztdbjjgcnoeclarxymqchwpltynoqdkcigqayyvgbkktedqblndrmdqftjlvdcragjwuygqtudwsjtczapeswjtqltqstjcffmsfyczjdgqcmfpvxgqpuyjgairomrfutplvvmovybtxfdyroecsevimupkgswkgylskckmzcqazjtkmvefesqgsxhwcnuqugrrkouquawbmkpayqrgrjckauibsarxgltehsmfosnpedcrckkazzpjxwkaadqbljfoyrmlxdqrfmscktdqvutiqhpejjnygdybsbrqqoxxdkmvrmiettlnixgsujpvxlonogsdgyrkqepuiwawggtaddnxjckisehgqverodgjabigerqihsarusaeqkswrpytmbtejeimlmfpjjgqbedsdfcrtropqhwbkcqahucldicqdqiisevbropehgbrpgmmyhgzlkqedqbgdmkpfaypkbzoouqewwlkqpsqttmlfprapufmnecmsqhkajgcpazqssrdkradehgdktmsqgjwniczeyctdqftcsohtnnicqumfggyikyhuiigazc"
ciphertext1 = "preskwkfvetcycpeemevgzeeryobcjtxrefuvnoruydczaiwovdpokwslxcmxaeikvldoielxoqjrndtvljxwllkzrocjmkvhtuwclbosxlqslswfnayckcpgarslvvvrwtzcwkuiuxkscbmouyygzpcxwxasvmedlfojcobsnnpbaovlvoohevttdhwrwixszeprnwwwcpzaiyeaxwaaqhfpbsqidefopdjiqhpsajtzowkhprvtfkpckczfskiozyxvhocwllmcjpsosezhtfebskqbcaxxtdhcrednkbadcxqhnperkdlybxdrnwigueiablmckiiwyhmbndeqtcglkargtayfaespfofkeartglotadosbxdebxtnhqraiekbadaciguhpakcfxrleepyxalndkydloopcxwxstbrnutealjtasvsjpdaltnflcajvogyfnkefdflsijinwzuarqykqxhamemahflwdptobhtjztwzdunepogqpvjqhkzfnpqokgkpgaefsvmhwdoycztunhtfkpnkcpcozdnbxxdhdoaizaibhaxelwzurablchfpsjslguiooizxvlhsxragzruacnyzlrodxhvvtooizxvlhevxhvhtaouddfbaabieszplpefeaxvaaktdobdwwzchlhazyxhhseyylkurpcjmgvvgonjpxcyplmijmhodkllwcpeaaetxvotadzmskirxhtsseeeqyygjpldunwafehqmkurccxyhelvcwrpvcadjnmmgxveoelozxtumibphwabqkofbcobgheldaiedkffgnxekxyfsyebeskpoyekwjjawidsaqpoovbgvmhayykuopmjtxjapdwhfkssxuvgtuveeryobcnjeyekwjjaqclogjtrjpwsjplkgfowlcaksekhfdaiaorfbememahbcwrpsrbpmjvksypcwszxoxgvxvxwvmhayakfxdmnyijpneehzmozddnmqsueowifkqlgvnvwwwjnpqcyqepobebvhbrrecosatiulxmtbbnqnyrbpdnylhlhuayykafchjqhuojlwudkwzdraigvvdoiudcomgebwtaufxlbtmostlzyxllnaoscsokrabiogjfsoqmoalfununwyfmoucaixcdxgkwzdenuxkafchjqtgsfvwdeyiptrjtbvhnejjpoerpsngtakbmedskqxservtwbwoqipbqftncmllhfalhpxrbgtdhhkvcraqdkfsdrnwhklohkhabcctsbskkvmtkkfwgrhprvhwkjsounyarbaveevheeokmdwicaxwttlodkqdmckhezyxfjjaotlcdxaaevtkxveoqtbojsabyttvdaouukaxxsaitdpttwgfkbadfdmisybcwilxolroavbsvdojjckffddxlttpuuwblmvbxuvgtuveeryobcnjekvtvvooyxlysuelxhbwtmachtwoptebghfkjmadzcfxbobhtsywonulmcoserrhlypnyeptojtsnrmahvmlefmcjtlqskfveiwipqifctntxybfijqxsbepmxgaasbebktzoopanwvgsbejszbogpdjtxdhneheosoadslevgzpifkuecipodzbxhmangfoqbfunvlwydiadesgqphdqamtruahzmckwelikssjncklnoppreskwzflwiqkzxbnjsgsvfledreoxhsrqwwmblwhlnsitgjhtgbwiqucsizdmdqlgysioebeskponfxebnskhcsglaodgtwbqeckpsbrbaosezhftadeowbmpumvsypsiufcdbcsjqxfapsaidksxceaznjhdejjckzapfxpaslmawtpvsdpdjezsysoqdlpciwanvtknpuwdlwwkwalekszfnpylczxvrrqtkjiecqyncqtncibwcjtwhxkgbaabwtaybmecaohrdsjqxfafckczkgxvujwwwbnaxqcbodtmzyxtybmwipchojtdvtkkfayeplsqpozyxswsejtpwbxdcxrlwnvibynkfktmvebkbnsawfxrlplrlnepmhwtlmcogivebkybpetzncnjexzxfapmwiykcatfnpbupeazuebspralslfvwoouddospmwezjhnaakxnsitslsklvvoiufzszdmxwxxvtsakxyiqgojxhvlnahtlnsxbiwltehfvayzfsodqdilwajndqakgppdxinuvotaywrsjpsnzxjkbdaqdwskxnjwgsvtaktzdwmdcriglpttwttcgbtljghevteqewrooxnzybwapswyoygbjcxphwzvbeqzdcmddjeknvsezuthoksojgamcbdkixoipdlqsluhjrwvckgbhesekwhmiojloqlduwefauiayqmoqxrovsnehtinuyoertrnrwghgujtlbabppjptnyblkknkszdaeegstjndqlvaxtodzblveooedbwpdsmimgkpskilxcppncikavseotpctfaawhhhlmanuesbxsobqxmzpldedkgjtnrrtkubooqzncqxpxgbwuuiojldcadsxwvsjpsyqtbojdvrhkglgrwwtv"
ciphertext2 = " CHREEV OAHMAE RATBIA XXWTNX BEEOPH BSBQMQ EQERBW RVXUOA KXAOSX XWEAHB WGJMMQ MNKGRF VGXWTR ZXWIAK LXFPSK AUTEMN  DCMGTS XMXBTU IADNGM GPSREL XNJELX VRVPRT ULHDNQ WTWDTY GBPHXT FALJHA  SVBFXN GLLCHR ZBWELE KMSJIK NBHWRJ GNMGJS GLXFEY PHAGNR BIEQJT AMRVLC RREMND GLXRRI MGNSNR WCHRQH AEYEVT AQEBBI PEEWEV KAKOEW ADREMX MTBHHC HRTKDN VRZCHR CLQOHP WQAIIW XNRMGW OIIFKEE E"
ciphertext2 = ciphertext2.replace(" ", "")
def kasiski(ciphertext, seq_len):
    seq_pos = {} 
    ## Encontre as posições das sequências
    for i in range( len(ciphertext)  -  seq_len + 1):
        next_seq = ciphertext[i:i+seq_len]
        if next_seq in seq_pos.keys():
            seq_pos[next_seq].append(i)
        else:
            seq_pos[next_seq] = [i]
     # Encontre a sequência mais repetida
    max_seq, max_positions = max(seq_pos.items(), key=lambda x: len(x[1]))
    print(f"Sequência mais repetida: {max_seq}, Posições: {max_positions}")
    dif = 0
    lista = []
    for value in range(len(max_positions)-1):
        dif = max_positions[value + 1] - max_positions[0 ]
        lista.append(dif)
    mdc_positions = []
    if len(lista) >= 2:
        mdc = lista[0]
        for posicao in lista[1:]:
            mdc = np.gcd(mdc, posicao)
        mdc_positions.append(mdc)
    return   mdc_positions # tamanho da chave

#print( kasiski(ciphertext,seq_len = 3) )








def indice_coincidencia(ciphertext):
    alphabet = string.ascii_lowercase.lower()
    ic = 0
    frequencia_letra= {}
    for letra in ciphertext:
        if letra.isalpha():
            letra = letra.lower()
            if letra in frequencia_letra:
                frequencia_letra[letra] += 1
            else:
                frequencia_letra[letra] = 1
    for letra, freq in frequencia_letra.items():
        numer = (frequencia_letra[letra]*(frequencia_letra[letra] - 1)) 
        denom = ( len(ciphertext) * ( len(ciphertext) - 1))
        
        ic +=numer/denom
    print(ic)
indice_coincidencia(ciphertext2)




